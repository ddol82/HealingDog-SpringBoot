<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.healing.healingdog.community.model.dao.CommunityMapper">

    <select id="selectBoardHeadline" resultType="BoardTableDTO">
        SELECT
            bd.board_code
             , bd.user_code
             , bd.board_category_code
             , bd.title
             , bd.content
             , bd.uptime
             , bd.view
             , bd.share
             , COUNT(cj.user_code) AS comment_count
          FROM boards AS bd
          LEFT JOIN (
            SELECT cm.user_code
              FROM comments AS cm
          ) AS cj
            ON cj.user_code = bd.user_code
         WHERE bd.important = 'O'
         GROUP BY bd.board_code
    </select>

    <select id="selectBoardCountAll" parameterType="_int" resultType="_int">
        SELECT
               COUNT(*)
          FROM boards
         WHERE 1=1
        <if test="categoryCode != 5">
           AND board_category_code = #{ code }
        </if>
    </select>

    <select id="selectBoardList" parameterType="CatAndPageDataForBoard" resultType="BoardTableDTO">
        SELECT
               bs.board_code
             , bs.user_code
             , bs.board_category_code
             , bs.title
             , bs.content
             , bs.uptime
             , bs.view
             , bs.share
             , COUNT(cj.user_code) AS comment_count
          FROM(
                SELECT
                       @rownum := @rownum+1 RN
                     , bd.board_code
                     , bd.user_code
                     , bd.board_category_code
                     , bd.title
                     , bd.content
                     , bd.uptime
                     , bd.view
                     , bd.share
                FROM boards bd
                WHERE(@rownum := 0) = 0
                <if test="categoryCode != 5">
                  AND bd.board_category_code = #{ categoryCode }
                </if>
                ORDER BY bd.board_code DESC
              ) bs
          LEFT JOIN (
              SELECT cm.user_code
              FROM comments AS cm
          ) AS cj
            ON cj.user_code = bs.user_code
         WHERE bs.RN <![CDATA[>=]]> #{ start }
           AND bs.RN <![CDATA[<=]]> #{ end }
         GROUP BY bs.board_code
    </select>

    <select id="selectBoardImageCount" parameterType="_int" resultType="_int">
        SELECT
               COUNT(*)
          FROM board_images I
         WHERE I.board_code = #{ code }
    </select>
    
    <select id="selectBoardDetail" parameterType="_int" resultType="BoardTableDTO">
        SELECT bs.board_code
             , bs.user_code
             , ud.profile_name
             , bs.board_category_code
             , bs.title
             , bs.content
             , bs.uptime
             , bs.view
             , bs.share
             , COUNT(cj.user_code) AS comment_count
        FROM boards AS bs
        LEFT JOIN (
            SELECT us.user_code
                 , us.name AS profile_name
              FROM users AS us
            ) AS ud
          ON ud.user_code = bs.user_code
        LEFT JOIN (
            SELECT cm.user_code
            FROM comments AS cm
        ) AS cj
          ON cj.user_code = bs.user_code
       WHERE bs.board_code = #{ boardCode }
    </select>

    <select id="checkLikeState" parameterType="_int" resultType="java.util.Map">
        SELECT COUNT(*)
          FROM board_likes
         WHERE board_code = #{ boardCode }
           AND user_code = #{ userCode }
    </select>

    <insert id="insertBoard" parameterType="BoardCreateDTO" useGeneratedKeys="true" keyProperty="id">
        INSERT
          INTO boards (
               board_code
             , user_code
             , board_category_code
             , title
             , content
             , uptime
        )
        VALUES (
               NULL
             , #{ userCode }
             , #{ boardCategoryCode }
             , #{ title }
             , #{ content }
             , NOW()
        )
    </insert>

    <update id="viewIncrement" parameterType="_int">
        UPDATE boards
           SET view = boards.view + 1
         WHERE board_code = #{ boardCode }
    </update>
</mapper>
